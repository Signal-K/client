-- Create user_mineral_inventory table to track extracted but unprocessed resources
CREATE TABLE public.user_mineral_inventory (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id UUID NOT NULL,
  mineral_deposit_id BIGINT NOT NULL,
  mineral_type TEXT NOT NULL,
  quantity NUMERIC NOT NULL,
  purity NUMERIC NOT NULL,
  extracted_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
  CONSTRAINT user_mineral_inventory_pkey PRIMARY KEY (id),
  CONSTRAINT user_mineral_inventory_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE,
  CONSTRAINT user_mineral_inventory_mineral_deposit_id_fkey FOREIGN KEY (mineral_deposit_id) REFERENCES public."mineralDeposits"(id) ON DELETE CASCADE
) TABLESPACE pg_default;

-- Add index for faster user lookups
CREATE INDEX idx_user_mineral_inventory_user_id ON public.user_mineral_inventory(user_id);

-- Add index for faster mineral deposit lookups
CREATE INDEX idx_user_mineral_inventory_mineral_deposit_id ON public.user_mineral_inventory(mineral_deposit_id);

-- Add index for time-based queries
CREATE INDEX idx_user_mineral_inventory_extracted_at ON public.user_mineral_inventory(extracted_at DESC);

-- Enable Row Level Security
ALTER TABLE public.user_mineral_inventory ENABLE ROW LEVEL SECURITY;

-- Create policy: Users can only view their own inventory
CREATE POLICY "Users can view own mineral inventory" 
  ON public.user_mineral_inventory 
  FOR SELECT 
  USING (auth.uid() = user_id);

-- Create policy: Users can insert their own inventory items
CREATE POLICY "Users can insert own mineral inventory" 
  ON public.user_mineral_inventory 
  FOR INSERT 
  WITH CHECK (auth.uid() = user_id);

-- Create policy: Users can update their own inventory
CREATE POLICY "Users can update own mineral inventory" 
  ON public.user_mineral_inventory 
  FOR UPDATE 
  USING (auth.uid() = user_id);

-- Create policy: Users can delete their own inventory
CREATE POLICY "Users can delete own mineral inventory" 
  ON public.user_mineral_inventory 
  FOR DELETE 
  USING (auth.uid() = user_id);